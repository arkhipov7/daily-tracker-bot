import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ParseMode
from aiogram.utils import executor
from datetime import datetime
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
API_TOKEN = '8016029705:AAGs4aMAryzGZBSMhOvKdnItC-gg85XlWp0'
GOOGLE_SHEET_NAME = '–¢—Ä–µ–∫–µ—Ä –î–∞–Ω–∏–∏–ª–∞'

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets
scope = ['https://spreadsheets.google.com/feeds',
         'https://www.googleapis.com/auth/drive']
creds = ServiceAccountCredentials.from_json_keyfile_name('google-credentials.json', scope)
client = gspread.authorize(creds)
sheet = client.open(GOOGLE_SHEET_NAME).sheet1

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram-–±–æ—Ç–∞
logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# === –û–ë–†–ê–ë–û–¢–ö–ê –°–û–û–ë–©–ï–ù–ò–ô ===
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —Ç—Ä–µ–∫–µ—Ä. –í 20:00 –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –¥–Ω—é ‚úçÔ∏è")

@dp.message_handler(commands=['track'])
async def manual_check_in(message: types.Message):
    await ask_daily_questions(message.chat.id)

async def ask_daily_questions(chat_id):
    text = (
        "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –ø—Ä–æ—à—ë–ª –¥–µ–Ω—å?\n\n"
        "1. –í–æ —Å–∫–æ–ª—å–∫–æ –≤—Å—Ç–∞–ª?\n"
        "2. –ë—ã–ª–∞ –ª–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞? üí™\n"
        "3. –°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ —Ñ–æ–∫—É—Å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±—ã–ª–æ? ‚è≥\n"
        "4. –ß—Ç–æ —Å–¥–µ–ª–∞–ª –ø–æ –±–æ—Ç—É / –∫–ª–∏–µ–Ω—Ç—É? ü§ñ\n"
        "5. –ß—Ç–æ –º–µ—à–∞–ª–æ? üåÄ\n"
        "6. –ß—Ç–æ —Å—á–∏—Ç–∞–µ—à—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ–º –¥–Ω—è? üèÜ\n\n"
        "–û—Ç–≤–µ—Ç—å –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º."
    )
    await bot.send_message(chat_id, text)

@dp.message_handler()
async def receive_daily_report(message: types.Message):
    now = datetime.now().strftime("%Y-%m-%d")
    data = message.text.split('\n')
    row = [now] + data[:6]  # –û–±—Ä–µ–∑–∞–µ–º –ª–∏—à–Ω–µ–µ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –±–æ–ª—å—à–µ
    sheet.append_row(row)
    await message.reply("–°–ø–∞—Å–∏–±–æ! –ó–∞–ø–∏—Å–∞–ª –≤—Å—ë –≤ —Ç–∞–±–ª–∏—Ü—É ‚úÖ")

# === –ê–í–¢–û–ó–ê–ü–£–°–ö –í–û–ü–†–û–°–ê –í 20:00 ===
async def scheduler():
    while True:
        now = datetime.now()
        if now.hour == 20 and now.minute == 0:
            # –ó–∞–º–µ–Ω–∏—Ç—å ID –Ω–∞ —Å–≤–æ–π Telegram ID –∏–ª–∏ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            await ask_daily_questions(188573278)
            await asyncio.sleep(60)  # –ø–æ–¥–æ–∂–¥–∞—Ç—å –º–∏–Ω—É—Ç—É, —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å
        await asyncio.sleep(30)

if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.create_task(scheduler())
    executor.start_polling(dp, skip_updates=True)
